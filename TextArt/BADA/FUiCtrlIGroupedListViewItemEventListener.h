/* $Change: 686294 $ */
//
// Copyright (c) 2011 Samsung Electronics Co., Ltd.
// All rights reserved.
 
// This software contains confidential and proprietary information 
// of Samsung Electronics Co., Ltd. 
// The user of this software agrees not to disclose, disseminate or copy such 
// Confidential Information and shall use the software only in accordance with 
// the terms of the license agreement the user entered into with Samsung.
//

/**
 * @file	FUiCtrlIGroupedListViewItemEventListener.h
 * @brief	This is the header file for the %IGroupedListViewItemEventListener interface.
 *
 * This header file contains the declarations of the %IGroupedListViewItemEventListener interface.
 */

#ifndef _FUICTRL_IGROUPEDLISTVIEW_ITEM_EVENT_LISTENER_H_
#define _FUICTRL_IGROUPEDLISTVIEW_ITEM_EVENT_LISTENER_H_

// Includes
#include "FUiCtrlConfig.h"
#include "FBaseRtIEventListener.h"
#include "FUiCtrlListViewEnum.h"

namespace Osp { namespace Ui { namespace Controls { class GroupedListView; }}}
namespace Osp { namespace Ui { namespace Controls {

 /**
  * @interface	IGroupedListViewItemEventListener
  * @brief		This interface implements the listener for the events generated by the items of the GroupedListView control.
  * @since		2.0
  *
  * The %IGroupedListViewItemEventListener interface is the listener interface for receiving GroupedListView item events.
  * The class that processes a list item event implements this interface, and the instance created with that class is registered
  *  with a UI control, using the control's AddGroupedListViewItemEventListener() method. When the list item event occurs, a
  *  method of that instance is invoked. 
  *
  * For more information on the class features, see <a href="../com.osp.cppappprogramming.help/html/dev_guide/ui/implementing_listviews.htm">ListViews</a>.

  */
class _EXPORT_CONTROLS_ IGroupedListViewItemEventListener :
	public Osp::Base::Runtime::IEventListener
{
public:
	/**
	 * This is the destructor for this class.
	 *
	 * @since	2.0
	 */
	virtual ~IGroupedListViewItemEventListener(void) {};
	
	/**
	 * Called when the state of an element of a GroupedListView item is changed.
	 *
	 * @since		2.0
	 * @param[in] 	listView		The source of the event
	 * @param[in] 	groupIndex		The index of the group item
	 * @param[in] 	itemIndex		The index of the item in the group
	 * @param[in] 	elementId		The element ID
	 * @param[in] 	status			The status of the element
	 * @remarks   	This method is called when an element of the %CustomItem control in the %GroupedListView control is checked, unchecked, or selected. @n
 	 * 				If the method is called to notify the state change of an item's annex or the item itself, the specified @c elementId is set to @c -1.
	 */
	virtual void OnGroupedListViewItemStateChanged(Osp::Ui::Controls::GroupedListView &listView, int groupIndex, int itemIndex, int elementId, Osp::Ui::Controls::ListItemStatus status)=0;
	
	/**
	 * Called when ListItem is swept.
	 *
	 * @since		2.0
	 * @param[in] 	listView		The source of the event
	 * @param[in] 	groupIndex		The index of the group item
	 * @param[in] 	itemIndex		The index of the item in the group
	 * @param[in] 	direction		The sweep direction
	 */
	virtual void OnGroupedListViewItemSwept(Osp::Ui::Controls::GroupedListView &listView, int groupIndex,  int itemIndex, Osp::Ui::Controls::SweepDirection direction) =0;

	/**
	 * Called when the state of an element in the ListContextItem control is changed.
	 *
	 * @since		2.0
	 * @param[in]	listView        The source of the event
	 * @param[in]	groupIndex      The index of the group item
	 * @param[in]	itemIndex       The index of the item in the group
	 * @param[in]	elementId       The element ID
	 * @param[in]	status          The status of the element
	 */
	virtual void OnGroupedListViewContextItemStateChanged(Osp::Ui::Controls::GroupedListView &listView, int groupIndex, int itemIndex, int elementId, Osp::Ui::Controls::ListContextItemStatus status) =0;
	
	/**
	 * Called when the item or the element is long pressed.
	 *
	 * @since		2.0
	 * @param[in]		listView      				The source of the event
	 * @param[in] 		groupIndex         			The index of the group
	 * @param[in] 		itemIndex					The index of the item in the group
	 * @param[in] 		elementId     				The element ID
	 * @param[in,out]	invokeListViewItemCallback	Indicates whether to invoke %GroupedListView item callback after this method returns
	 * @remarks      	This method is invoked when an item or an element is long pressed. @n
	 *					When the event comes from the annex or the whole item, @c elementId is always -1. @n
	 *					Setting @c invokeListViewItemCallback to @c true invokes %GroupedListView item callbacks after this method returns. @n
	 *					Set @c invokeListViewItemCallback to @c false to not invoke %GroupedListView item callbacks. The default value of 
	 *					@c invokeListViewItemCallback is @c true. @n
	 *					Note that other %GroupedListView item callbacks are not called even though @c invokeListViewItemCallback is @c true, if 
	 *					%GroupedListView loses focus, for example, due to invoking a Popup or a ContextMenu in this method.
	 */
	virtual void OnGroupedListViewItemLongPressed(Osp::Ui::Controls::GroupedListView &listView, int groupIndex, int itemIndex, int elementId, bool& invokeListViewItemCallback);


protected:
	/**
	 * @internal
	 * This method is for internal use only. The bada platform team is not
	 * responsible for any behavioral correctness, consistency, and
	 * security-related issues that might arise after using this method.
	 *
	 * The following method is reserved, and their names can be changed
	 * at any time without prior notice.
	 *
	 * @since      2.0
	 */
    virtual void IGroupedListViewItemEventListener_Reserved1 (void) {}

	/**
	 * @internal
	 * This method is for internal use only. The bada platform team is not
	 * responsible for any behavioral correctness, consistency, and
	 * security-related issues that might arise after using this method.
	 *
	 * The following method is reserved, and their names can be changed
	 * at any time without prior notice.
	 *
	 * @since      2.0
	 */
    virtual void IGroupedListViewItemEventListener_Reserved2 (void) {}
};

}; }; };

#endif
