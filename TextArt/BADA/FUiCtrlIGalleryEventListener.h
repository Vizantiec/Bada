// Copyright (c) 2011 Samsung Electronics Co., Ltd.
// All rights reserved.
 
// This software contains confidential and proprietary information 
// of Samsung Electronics Co., Ltd.
// The user of this software agrees not to disclose, disseminate or copy such 
// Confidential Information and shall use the software only in accordance with 
// the terms of the license agreement the user entered into with Samsung.
//
/** 
 * @file		FUiCtrlIGalleryEventListener.h
 * @brief		This is the header file for the %IGalleryEventListener interface.
 *
 * This header file contains the declarations of the %IGalleryEventListener class. @n
 * If an event is generated, a method of this class is called. @n
 * Therefore, when an application performs jobs related to the event, the methods of this class are executed.
 *
 */
#ifndef _FUICTRL_IGALLERY_EVENT_LISTENER_H_
#define _FUICTRL_IGALLERY_EVENT_LISTENER_H_

// Includes
#include "FUiCtrlConfig.h"
#include "FBaseRtIEventListener.h"

namespace Osp { namespace Ui { namespace Controls { class Gallery; } } }

namespace Osp { namespace Ui { namespace Controls {

/**
 * @interface	IGalleryEventListener
 * @brief		This interface defines the listener for the events generated by the Gallery control.
 * @since		2.0
 *
 * The %IGalleryEventListener interface is the listener interface for receiving Gallery events. 
 * The class that processes a gallery event implements this interface, and the instance created using the Gallery's
 * AddGalleryEventListener() method. When the gallery event occurs, a method of that instance is invoked. 
 * 
 * For more information on the class features, see <a href="../com.osp.cppappprogramming.help/html/dev_guide/ui/implementing_gallery.htm">Gallery</a>.
 */
class _EXPORT_CONTROLS_ IGalleryEventListener :
	public Osp::Base::Runtime::IEventListener
{
public:
	/**
	 * This is the destructor for this class.
	 *
	 * @since 2.0
	 */
	virtual ~IGalleryEventListener(void) {}
	
	/**
	 * Called when the current item changes.
	 *
	 * @since 	2.0
	 * @param[in] 	gallery		 		The source of the event
 	 * @param[in] 	currentItemIndex 	The current item index
	 */
	virtual void OnGalleryCurrentItemChanged(Osp::Ui::Controls::Gallery& gallery, int currentItemIndex) = 0;
	
	/**
	 * Called when the item is clicked.
	 *
	 * @since 	2.0
	 * @param[in] 	gallery		The source of the event
 	 * @param[in] 	itemIndex	The index of the item
	 */
	virtual void OnGalleryItemClicked(Osp::Ui::Controls::Gallery& gallery, int itemIndex) = 0;

    /**
     * Called when the slide-show starts.
     *
     * @since 	2.0
     * @param[in]	gallery        The source of the event
     */
    virtual void OnGallerySlideShowStarted(Osp::Ui::Controls::Gallery& gallery) = 0;

    /**
     * Called when the slide-show stops.
     *
     * @since 		2.0
     * @param[in] 	gallery        The source of the event
     */
    virtual void OnGallerySlideShowStopped(Osp::Ui::Controls::Gallery& gallery) = 0;


protected:	
	/**
	 * @internal
	 * This method is for internal use only. The bada platform team is not
	 * responsible for any behavioral correctness, consistency, and
	 * security-related issues that might arise after using this method.
	 *
	 * The following method is reserved, and their names can be changed
	 * at any time without prior notice.
	 *
	 * @since      2.0
	 */
    virtual void GalleryEventListener_Reserved1 (void) {}

	/**
	 * @internal
	 * This method is for internal use only. The bada platform team is not
	 * responsible for any behavioral correctness, consistency, and
	 * security-related issues that might arise after using this method.
	 *
	 * The following method is reserved, and their names can be changed
	 * at any time without prior notice.
	 *
	 * @since      2.0
	 */
    virtual void GalleryEventListener_Reserved2 (void) {}

	/**
	 * @internal
	 * This method is for internal use only. The bada platform team is not
	 * responsible for any behavioral correctness, consistency, and
	 * security-related issues that might arise after using this method.
	 *
	 * The following method is reserved, and their names can be changed
	 * at any time without prior notice.
	 *
	 * @since      2.0
	 */
    virtual void GalleryEventListener_Reserved3 (void) {}

	/**
	 * @internal
	 * This method is for internal use only. The bada platform team is not
	 * responsible for any behavioral correctness, consistency, and
	 * security-related issues that might arise after using this method.
	 *
	 * The following method is reserved, and their names can be changed
	 * at any time without prior notice.
	 *
	 * @since      2.0
	 */
    virtual void GalleryEventListener_Reserved4 (void) {}

	/**
	 * @internal
	 * This method is for internal use only. The bada platform team is not
	 * responsible for any behavioral correctness, consistency, and
	 * security-related issues that might arise after using this method.
	 *
	 * The following method is reserved, and their names can be changed
	 * at any time without prior notice.
	 *
	 * @since      2.0
	 */
    virtual void GalleryEventListener_Reserved5 (void) {}
};

}; }; }; /* Osp::Ui::Controls */

#endif // _FUICTRL_IGALLERY_EVENT_LISTENER_H_
